{"version":3,"sources":["components/Main/Main.js","components/Wind/Wind.js","components/Dt/Dt.js","components/Sys/Sys.js","components/Weather/Weather.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Main","props","className","src","convertKtoC","weatherMain","temp_max","temp_min","Wind","weatherWind","speed","deg","Dt","unixTimestamp","weatherDt","Date","toUTCString","slice","convertTimestamptoTime","Sys","weatherSys","sunrise","sunset","Weather","api1","api2","useState","city","form","setForm","weather","setWeather","forecast","setForecast","degree","setDegree","weatherData","e","a","preventDefault","alert","fetch","then","res","json","data","coord","lat","lon","fdata","d","today","nextDay","kelvinToCelsius","kelvin","main","temp","Math","floor","kToCForcasting","kelvinForcast","undefined","type","size","onChange","value","target","inputHandler","placeholder","name","autoComplete","required","onClick","alt","sys","country","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","i","dateBuilder","celsius","document","querySelector","innerHTML","round","dt","feels_like","humidity","clouds","all","daily","wind","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bf0aa906.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Main.css\";\r\n\r\nfunction Main(props) {\r\n  //   console.log(props);\r\n  return (\r\n    <div className=\"weatherMain-box\">\r\n      <div className=\"main\">\r\n        <div className=\"max-temp\">\r\n          <img src=\"https://img.icons8.com/fluent-systems-regular/22/ffffff/thermometer-up.png\" />\r\n          {props.convertKtoC(props.weatherMain.temp_max)}\r\n          <sup>o</sup>C\r\n        </div>\r\n        <div className=\"min-temp\">\r\n          <img src=\"https://img.icons8.com/fluent-systems-regular/22/ffffff/thermometer-down.png\" />\r\n          {props.convertKtoC(props.weatherMain.temp_min)}\r\n          <sup>o</sup>C\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Main;\r\n","import React from \"react\";\r\nimport \"./Wind.css\";\r\nconst Wind = (props) => {\r\n  return (\r\n    <div className=\"weatherWind-box\">\r\n      <div className=\"wind\">\r\n        <div>Wind-Speed {props.weatherWind.speed} meter / sec</div>\r\n        <img src=\"https://img.icons8.com/ios-glyphs/24/ffffff/windy-weather.png\" />{\" \"}\r\n        <div>Wind-Direction {props.weatherWind.deg} deg</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Wind;\r\n","import React from \"react\";\r\nimport \"./Dt.css\";\r\nconst Dt = (props) => {\r\n  const convertTimestamptoTime = (props) => {\r\n    let unixTimestamp = props.weatherDt;\r\n    // convert to milliseconds and\r\n    // then create a new Date object\r\n    let dateObj = new Date(unixTimestamp * 1000);\r\n    let utcString = dateObj.toUTCString();\r\n    let time = utcString.slice(-11, -4);\r\n    return time;\r\n  };\r\n  return (\r\n    <div className=\"weatherDt-box\">\r\n      <div className=\"dt\">\r\n        <img src=\"https://img.icons8.com/material-rounded/48/ffffff/time.png\" />\r\n        <div>Updated as of {convertTimestamptoTime(props)}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Dt;\r\n","import React from \"react\";\r\nimport \"./Sys.css\";\r\nconst Sys = (props) => {\r\n  const convertTimestamptoTime = (props) => {\r\n    let unixTimestamp = props;\r\n    // convert to milliseconds and\r\n    // then create a new Date object\r\n    let dateObj = new Date(unixTimestamp);\r\n    let utcString = dateObj.toUTCString();\r\n\r\n    let time = utcString.slice(-11, -4);\r\n    return time;\r\n  };\r\n  return (\r\n    <div className=\"weatherSys-box\">\r\n      <div className=\"sys\">\r\n        <div>Sunrise {convertTimestamptoTime(props.weatherSys.sunrise)} AM</div>\r\n        <div>Sunset {convertTimestamptoTime(props.weatherSys.sunset)} PM</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Sys;\r\n","import React, { useState } from \"react\";\r\nimport Main from \"./../Main/Main\";\r\nimport Wind from \"./../Wind/Wind\";\r\nimport Dt from \"./../Dt/Dt\";\r\nimport Sys from \"./../Sys/Sys\";\r\n\r\nfunction Weather() {\r\n  const api1 = {\r\n    key: \"4b3e61d509a14cd79c90d406e79d5d1a\",\r\n    baseURL: \"https://api.openweathermap.org/data/2.5/\",\r\n  };\r\n  const api2 = {\r\n    key: \"0281266202fa5f669d3041e0588e1367\",\r\n    baseURL: \"https://api.openweathermap.org/data/2.5/\",\r\n  };\r\n  // *************************<States>*************************\r\n  const [form, setForm] = useState({ city: \"\" });\r\n  const [weather, setWeather] = useState([]); //(Current Weather Data)Array of objects(json) or JSON array\r\n  const [forecast, setForecast] = useState([]); //16 Days Forecast Data\r\n  const [degree, setDegree] = useState(\"C\"); // Default degree is Celsius.\r\n  // **********************************************************\r\n  // *********************Event handlers***********************\r\n  // -----this is API fetching and also event's handler for serach button-----\r\n  const weatherData = async (e) => {\r\n    e.preventDefault();\r\n    if (form.city === \"\") {\r\n      alert(\"Please insert valid data\");\r\n    } else {\r\n      const data = await fetch(\r\n        // First API Call (data = City's Current Weather) :\r\n        `${api1.baseURL}weather?q=${form.city}&appid=${api1.key}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => data);\r\n      // console.log(data);\r\n      setWeather({ weather: data });\r\n      // now All data goes to 'weather' so far.\r\n      setForm({ city: \"\" }); //Form has been reset !\r\n      // console.log(data.coord.lat);\r\n\r\n      const fdata = await fetch(\r\n        // Second API Call (fdata = City's 7 days Forcast):\r\n        `${api2.baseURL}onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&appid=${api2.key}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((fdata) => fdata);\r\n      // console.log(fdata);\r\n      setForecast({ forecast: fdata });\r\n    }\r\n  };\r\n  const inputHandler = (e) => {\r\n    let value = e.target.value;\r\n    setForm({ city: value });\r\n\r\n    // console.log(form.city);\r\n  };\r\n  const toggleDegree = () => {\r\n    let kelvin = weather.weather.main.temp;\r\n    let celsius = Math.floor(kelvin - 273.15);\r\n    if (degree === \"F\") {\r\n      setDegree(\"C\");\r\n      const Cel = document.querySelector(\".degree\");\r\n      Cel.innerHTML = celsius;\r\n    } else if (degree === \"C\") {\r\n      setDegree(\"F\");\r\n      const Fhr = document.querySelector(\".degree\");\r\n      Fhr.innerHTML = Math.round(celsius * 1.8 + 32);\r\n    }\r\n  };\r\n  // ***********************************************************\r\n  // ***************none event handlers functions***************\r\n  let d = new Date();\r\n  let today = \"\";\r\n  let nextDay = [];\r\n  const dateBuilder = (d) => {\r\n    let months = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    let days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n      \"Sunday\"\r\n    ];\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n    today = day;\r\n    for (let i = 1; i <= 7; i++) {\r\n      nextDay[i] = days[d.getDay() + i];\r\n    }\r\n\r\n    return `${day} ${date} ${month} ${year} `;\r\n  };\r\n  // ------------------------------\r\n  const kelvinToCelsius = () => {\r\n    let kelvin = weather.weather.main.temp;\r\n    let celsius = Math.floor(kelvin - 273.15);\r\n    return celsius;\r\n  };\r\n  const kToCForcasting = (props) => {\r\n    let kelvinForcast = props;\r\n    let celsiusForcast = Math.floor(kelvinForcast - 273.15);\r\n    return celsiusForcast;\r\n  };\r\n  const weatherDescription = [\"Rain\", \"Clouds\" ,\"Clear\"];\r\n  // ------------------------------\r\n  return (\r\n    // Dynamic CSS\r\n    <div\r\n      className={\r\n        weather.weather !== undefined\r\n          ? weather.weather.main.temp > 289.15\r\n            ? \"app warm\"\r\n            : \"app\"\r\n          : \"app\"\r\n      }\r\n    >\r\n      <main>\r\n        <form className=\"search-box\">\r\n          <input\r\n            type=\"text\"\r\n            size=\"10\"\r\n            onChange={(e) => inputHandler(e)}\r\n            className=\"search-bar\"\r\n            placeholder=\"City...\"\r\n            name=\"city\"\r\n            value={form.city}\r\n            autoComplete=\"off\"\r\n            required\r\n          ></input>\r\n          <button type=\"reset\" onClick={weatherData} className=\"search-button\">\r\n            <img\r\n              src=\"https://img.icons8.com/ios-filled/50/ffffff/detective.png\"\r\n              alt=\"searchButton\"\r\n            />\r\n          </button>\r\n        </form>\r\n        {/* *** */}\r\n        {weather.weather !== undefined ? (\r\n          <div className=\"display\">\r\n            <div className=\"circleContainer\">\r\n              <div className=\"location-box\">\r\n                <div className=\"location\">\r\n                  <img\r\n                    alt=\"location\"\r\n                    src=\"https://img.icons8.com/fluent-systems-filled/48/ffffff/worldwide-location.png\"\r\n                  />\r\n                  {weather.weather.name}, {weather.weather.sys.country}\r\n                </div>\r\n                <div className=\"date\">\r\n                  <div>{dateBuilder(d)}</div>\r\n                  {/* OR use this :<div>{new Date().toLocaleDateString()}</div> */}\r\n                </div>\r\n              </div>\r\n              <div className=\"weather-box\">\r\n                <div className=\"temp\">\r\n                  <span className=\"degree\">{kelvinToCelsius()}</span>\r\n                  <sup>o</sup>\r\n                  <button onClick={toggleDegree}>{degree}</button>\r\n                  <div className=\"weather\">\r\n                    {weather.weather.weather[0].main}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Dt weatherDt={weather.weather.dt} />\r\n            {/* Forcasting for 6 days starting from tomorrow(nextDay) :*/}\r\n            {forecast.forecast !== undefined ? (\r\n              <div className=\"details\">\r\n                <div className=\"today\">\r\n                  <div>\r\n                    {today}\r\n                    <span>Today</span>\r\n                  </div>\r\n                  <div className=\"feelsLike\">\r\n                    Feels {weather.weather.main.feels_like}\r\n                  </div>\r\n                  <div className=\"humidity\">\r\n                    Humid{\" \"}\r\n                    <img src=\"https://img.icons8.com/metro/15/ffffff/water.png\" />\r\n                    {weather.weather.main.humidity}%\r\n                  </div>\r\n                  <div className=\"cloudiness\">\r\n                    Cloudy{\" \"}\r\n                    <img src=\"https://img.icons8.com/fluent-systems-filled/22/ffffff/partly-cloudy-day.png\" />{\" \"}\r\n                    {weather.weather.clouds.all}%\r\n                  </div>\r\n                </div>\r\n                <div className=\"nextDays\">\r\n                  <div>{nextDay[1]}</div>\r\n                  <div>{forecast.forecast.daily[0].weather[0].main}</div>\r\n                  <div>\r\n                    {kToCForcasting(forecast.forecast.daily[0].temp.day)}\r\n                    <sup>o</sup>C\r\n                  </div>\r\n                </div>\r\n                <div className=\"nextDays\">\r\n                  <div>{nextDay[2]}</div>\r\n                  <div>{forecast.forecast.daily[1].weather[0].main}</div>\r\n                  <div>\r\n                    {kToCForcasting(forecast.forecast.daily[1].temp.day)}\r\n                    <sup>o</sup>C\r\n                  </div>\r\n                </div>\r\n                <div className=\"nextDays\">\r\n                  <div>{nextDay[3]}</div>\r\n                  <div>{forecast.forecast.daily[2].weather[0].main}</div>\r\n                  <div>\r\n                    {kToCForcasting(forecast.forecast.daily[2].temp.day)}\r\n                    <sup>o</sup>C\r\n                  </div>\r\n                </div>\r\n                <div className=\"nextDays\">\r\n                  <div>{nextDay[4]}</div>\r\n                  <div>{forecast.forecast.daily[3].weather[0].main}</div>\r\n                  <div>\r\n                    {kToCForcasting(forecast.forecast.daily[3].temp.day)}\r\n                    <sup>o</sup>C\r\n                  </div>\r\n                </div>\r\n                <div className=\"nextDays\">\r\n                  <div>{nextDay[5]}</div>\r\n                  <div>{forecast.forecast.daily[4].weather[0].main}</div>\r\n                  <div>\r\n                    {kToCForcasting(forecast.forecast.daily[4].temp.day)}\r\n                    <sup>o</sup>C\r\n                  </div>\r\n                </div>\r\n                <div className=\"nextDays\">\r\n                  <div>{nextDay[6]}</div>\r\n                  <div>{forecast.forecast.daily[5].weather[0].main}</div>\r\n                  <div>\r\n                    {kToCForcasting(forecast.forecast.daily[5].temp.day)}\r\n                    <sup>o</sup>C\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n\r\n            {/* My Components realted to api1 (weather) : */}\r\n            <div className=\"myComponents\">\r\n              <Main\r\n                weatherMain={weather.weather.main}\r\n                convertKtoC={kelvinToCelsius}\r\n              />\r\n              <Wind weatherWind={weather.weather.wind} />\r\n              <Sys weatherSys={weather.weather.sys} />\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {/* *** */}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nexport default Weather;\r\n","import Weather from \"../components/Weather/Weather\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Weather />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}